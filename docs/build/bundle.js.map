{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/Options.svelte","../../src/modules/vendor/dice-utils.js","../../src/modules/utils.js","../../src/modules/starSystems.js","../../src/modules/starSystemPrinter.js","../../src/modules/jobs.js","../../src/modules/jobsPrinter.js","../../src/modules/encounters.js","../../src/modules/encountersPrinter.js","../../src/components/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\r\n    import { createEventDispatcher } from 'svelte'\r\n    \r\n    export let starData;\r\n    export let options; // See src/data/options.json\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    // Create a UI-only version of the data\r\n\tlet starLocations = JSON.parse(JSON.stringify(starData.starLocations))\r\n\tstarLocations.push({\"key\": \"ran\", \"name\": \"Random\"})\r\n\r\n    function toggleHideUninhabited() {\r\n        options.showSurveyedDetails = !options.showSurveyedDetails\r\n        dispatch('saveOptions') // no need to pass options up, it's the same object.\r\n    }\r\n    \r\n    function saveOptions() {\r\n        // console.log('Options.svelte - saveOptions')\r\n\t\tdispatch('saveOptions') // no need to pass options up, it's the same object.\r\n\t}\r\n</script>\r\n\r\n<div style=\"display: {options.showOptions === false ? 'none' : 'block'}\">\r\n    <form>\r\n        <fieldset>\r\n            <legend>Star System Options</legend>\r\n            \r\n            <div class=\"subTitle\">Output Options</div>\r\n            <div>\r\n                <label>\r\n                    <input type=\"checkbox\" on:click={toggleHideUninhabited} bind:checked={options.showSurveyedDetails}> Show surveyed details\r\n                </label>\r\n            </div>\r\n            \r\n            <div class=\"subTitle\">Star System Location</div>\r\n            <div>\r\n                {#each starLocations as item}\r\n                    <label>\r\n                        <!-- FIXME on:change fires before the value is updated to the new value, meaning it's one step behind. -->\r\n                        <input type=radio on:click={saveOptions} bind:group={options.starLocation} value={item.key}> {item.name}\r\n                    </label>\r\n                {/each}\r\n            </div>\r\n        </fieldset>\r\n    </form>\r\n</div>\r\n\r\n<style>\r\n    .subTitle {\r\n        font-weight: bold;\r\n        margin: 0.5rem 0;\r\n    }\r\n</style>","var isMultiplier = (str) => {\r\n  if (typeof str === 'string') {\r\n    return /[xX*]{1}[\\d]{1,}/.test(str);\r\n  }\r\n  return false;\r\n};\n\nvar isFudge = (sides) => (!!((sides && sides.toString().toUpperCase() === 'F')));\n\nvar isDropLowest = (mod) => !!(mod && mod.toString().toUpperCase() === '-L');\n\nvar isSuccessCount = (mod) => !!(mod && /[<>]{1}[\\d]{1,}/.test(mod));\n\n/**\r\n * Parse a die notation string.\r\n * @param {int} diceString - A die notation string ie \"1d20+5\".\r\n * @return {object} An object containing the parsed components of the die string.\r\n */\r\nvar parseDieNotation = (diceString) => {\r\n  if (typeof diceString !== 'string') {\r\n    throw new Error('parseDieNotation must be called with a dice notation string');\r\n  }\r\n\r\n  const parts = diceString.toLowerCase().split('d');\r\n  const count = parseInt(parts[0], 10) || 1;\r\n  const sides = isFudge(parts[1]) ? 'F' : parseInt(parts[1], 10);\r\n  let mod = 0;\r\n  const result = {\r\n    count,\r\n    sides,\r\n  };\r\n\r\n  if (Number.isNaN(Number(parts[1]))) {\r\n    // die notation includes a modifier\r\n    const modifierMatch = /[+-xX*<>]{1}[\\dlL]{1,}/;\r\n    const matchResult = parts[1].match(modifierMatch);\r\n    if (matchResult) {\r\n      if (isMultiplier(matchResult[0])) {\r\n        result.multiply = true;\r\n        mod = parseInt(matchResult[0].substring(1), 10);\r\n      } else if (isDropLowest(matchResult[0])) {\r\n        mod = 0;\r\n        result.dropLow = true;\r\n      } else if (isSuccessCount(matchResult[0])) {\r\n        const highOrLow = matchResult[0].charAt(0);\r\n        result.success = highOrLow === '>' ? 1 : -1;\r\n        mod = parseInt(matchResult[0].substring(1), 10);\r\n      } else {\r\n        mod = parseInt(matchResult[0], 10);\r\n      }\r\n    }\r\n  }\r\n  result.mod = mod;\r\n\r\n  return result;\r\n};\n\n/**\r\n * Generate a random number between 1 and sides.\r\n * @param {int} sides - The number of sides on the die.\r\n * @param {function} randFn - A function that returns a pseudorandom float between 0 and 1.\r\n * @return {int} The number rolled.\r\n */\r\nvar rollDie = (sides, randFn = Math.random) => {\r\n  if (!isFudge(sides) && !Number.isInteger(sides)) {\r\n    throw new Error('rollDie must be called with an integer or F');\r\n  }\r\n\r\n  if (isFudge(sides)) {\r\n    return Math.ceil(randFn() * 2) - 1;\r\n  }\r\n\r\n  return Math.ceil(randFn() * (sides - 1) + 1);\r\n};\n\nconst getTotal = (results, options) => {\r\n  const {\r\n    mod, multiply, dropLow, success,\r\n  } = options;\r\n  let resultCopy = [...results];\r\n  let total = 0;\r\n\r\n  if (dropLow) {\r\n    (resultCopy = resultCopy.sort((a, b) => a - b)).shift();\r\n  }\r\n\r\n  if (success) {\r\n    resultCopy.forEach((v) => {\r\n      if ((success < 0 && v <= mod) || (success > 0 && v >= mod)) {\r\n        total += 1;\r\n      }\r\n    });\r\n  } else {\r\n    resultCopy.forEach((v) => {\r\n      total += v;\r\n    });\r\n\r\n    if (multiply) {\r\n      total *= mod;\r\n    } else if (mod) {\r\n      total += mod;\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\n/**\r\n * Parse a die notation string, roll the individual dice, and return the total\r\n * accounting for any modifiers.\r\n * @param {int} diceString - A die notation string ie \"1d20+5\".\r\n * @param {function} randFn - A function that returns a pseudorandom float between 0 and 1.\r\n * @return {object} An object containing the results of the invididual die rolls and the\r\n * total of the modified sum.\r\n */\r\nvar roll = (diceString, randFn = Math.random) => {\r\n  const {\r\n    count, sides, mod, multiply, dropLow, success,\r\n  } = parseDieNotation(diceString);\r\n  const results = [];\r\n\r\n  for (let i = 0; i < count; i += 1) {\r\n    const currentResult = rollDie(sides, randFn);\r\n    results.push(currentResult);\r\n  }\r\n\r\n  return {\r\n    results,\r\n    total: getTotal(results, {\r\n      mod, multiply, dropLow, success,\r\n    }),\r\n  };\r\n};\n\nvar index = {\r\n  parseDieNotation,\r\n  rollDie,\r\n  roll,\r\n};\n\nexport default index;\n","/**\n * Helper methods for randomly selecting items.\n * Will incorporate some rules from Alien's generators.\n */\n\n// FIXME Because the node module's package.json doesn't have type=module, nodejs fails because it's using cjs.\n// import diceUtils from '../../node_modules/dice-utils/dist/dice-utils.js';\nimport diceUtils from './vendor/dice-utils.js';\n\nconst countUnique = arr => {\n    return arr.reduce((acc, val, ind, array) => {\n       if(array.lastIndexOf(val) === ind){\n          return ++acc\n       }\n       return acc\n    }, 0)\n}\n\n/**\n * Go through an array of objects and return the first item whose key=value matches.\n */\nconst findArrayItemByProperty = (arr, key, value) => arr.find(obj => obj[key] === value)\n\n/**\n * From https://blog.abelotech.com/posts/number-currency-formatting-javascript/\n * @param {number} num E.g. 10000\n * @returns {string} E.g. 10,000\n */\nconst formatNumber = (num) => num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n\nconst random2D6ArrayItem = (arr, mod = 0) => {\n\treturn rollArrayItem(arr, '2d6', mod)\n}\n\nconst random3D6ArrayItem = (arr, mod = 0) => {\n\treturn rollArrayItem(arr, '3d6', mod)\n}\n\nconst randomArrayItem = (arr) => {\n\tconst idx = Math.floor(Math.random() * arr.length)\n\treturn arr[idx]\n}\n\nconst randomD6ArrayItem = (arr, mod = 0) => {\n\treturn rollArrayItem(arr, 'd6', mod)\n}\n\n// The mod changes the tens die, not the total.\nconst randomD66ArrayItem = (arr, tensMod = 0) => {\n\tconst total = rollD66(tensMod)\n\t// console.debug(`randomD66ArrayItem tensMod=${tensMod}, total=${total}`)\n\tfor (const item of arr) {\n\t\tif (total <= item['d66']) {\n\t\t\treturn item\n\t\t}\n\t}\n\tthrow `Couldn't find a random d66 item for length ${arr.length} array.`\n}\n\n/**\n * Generate a random int between min and max, inclusive.\n */\nconst randomInteger = (min, max) => {\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Will keep rolling until it finds one not already in existing.\n */\nconst randomUniqueD66Item = (d66Data, existing) => {\n    let item = null\n    let foundNewItem = false\n    while (!foundNewItem) {\n        item = randomD66ArrayItem(d66Data)\n        foundNewItem = !existing.includes(item)\n    }\n    return item\n}\n\n/**\n * Interface with dice utils function.\n * @param {*} rollString E.g. '2d6'\n * @returns {number} The total of the roll. e.g. 10.\n */\nconst roll = (rollString) => {\n\ttry {\n\t\treturn diceUtils.roll(rollString).total\n\t} catch (err) {\n\t\tthrow new Error(`roll fail, rollString=${rollString}, err=${err}`)\n\t}\n}\n\nconst rollArrayItem = (arr, diceString, mod = 0) => {\n\tlet num = diceUtils.roll(diceString + ' ' + mod).total // e.g. 2d6 -2\n\t// console.log(`rollArrayItem, mod=${mod}, total=${num}`)\n\tfor (const item of arr) {\n\t\tif (num <= item[diceString]) {\n\t\t\treturn item\n\t\t}\n\t}\n\tthrow `Couldn't find a random ${diceString} item for length ${arr.length} array.`\n}\n\n/**\n * Simulate a \"D66\" roll, with an optional modifier to tensMod.\n */\nconst rollD66 = (tensMod = 0) => {\n\tlet tensDie = diceUtils.roll('d6').total + tensMod\n\ttensDie = tensDie < 1 ? 1 : tensDie // minimum 1.\n\ttensDie = tensDie > 6 ? 6 : tensDie // maximum 6.\n\t\n\tlet onesDie = diceUtils.roll('d6').total\n\t\n\t// Change into a d66 number, by adding tens and ones together, then turning into a number.\n\treturn parseInt('' + tensDie + onesDie, 10)\n}\n\n/**\n * For an object with number (rollString) and modifiers (including 'default'), generate the number.\n * TODO Should this just be in starSystem.js?\n */\nconst rollNumberObjects = (object, modKey) => {\n\t// Get the star type mode, else use 'default'\n\tconst mod = object.modifiers[modKey] ? object.modifiers[modKey] : object.modifiers['default']\n\tconst rollString = '' + object.number + mod\n\tconst rollResult = diceUtils.roll(rollString)\n\treturn rollResult.total < 0 ? 0 : rollResult.total\n}\n\nconst shuffleArray = (arr) => {\n   for (var i = arr.length - 1; i > 0; i--) {\n       var j = Math.floor(Math.random() * (i + 1))\n       var temp = arr[i]\n       arr[i] = arr[j]\n       arr[j] = temp\n   }\n   return arr\n}\n\nexport default {\n\tcountUnique,\n\tfindArrayItemByProperty,\n\tformatNumber,\n\trandom2D6ArrayItem,\n\trandom3D6ArrayItem,\n\trandomArrayItem,\n\trandomD6ArrayItem,\n\trandomD66ArrayItem,\n\trandomInteger,\n\trandomUniqueD66Item,\n\troll,\n\trollD66,\n\trollNumberObjects\n\t// shuffleArray\n}\n","import utils from './utils.js'\n\nconst createStarSystem = (data, options = {}) => {\n\tlet results = {}\n\n\tif (options.starLocation && options.starLocation !== 'ran') {\n\t\tresults.starLocation = utils.findArrayItemByProperty(data.starLocations, 'key', options.starLocation)\n\t} else {\n\t\t// TODO Make this an option the user can choose, instead of always rolling randomly.\n\t\tresults.starLocation = utils.randomArrayItem(data.starLocations)\n\t}\n\n\t// For frontier, pick random allegiance table for later.\n\tif (results.starLocation.colonyAllegianceKeys) {\n\t\tresults.starLocation.colonyAllegianceKey = utils.randomArrayItem(results.starLocation.colonyAllegianceKeys)\n\t}\n\t\n\tresults.starType = getStarType(data)\n\n\t// TODO What about \"Spectral Class\"?\n\n\tcreateSystemObjects(data, results)\n\n\tif (results.systemObjects.length === 0) {\n\t\tthrow new Error('Failed to generate any system objects.')\n\t}\n\n\t// Pick which planetary body will be the \"main\" world, which has been colonized.\n\tlet usedPlanetNames = []\n\tpickColonizedWorld(data, results, usedPlanetNames)\n\tgenerateWorlds(data, results)\n\n\t// Sort the system objects by temperature, instead of randomly.\n\tresults.systemObjects.sort((a, b) => b.temperature.average - a.temperature.average)\n\n\treturn results\n}\n\nconst getStarType = (data) => {\n\treturn utils.randomArrayItem(data.starTypes)\n}\n\n// Generate random amount of system objects for this system, based on the star type.\nconst createSystemObjects = (data, results) => {\n\tresults['systemObjects'] = []\n\tlet modKey = results['starType'].type // will look up the modifier by this key, else use 'default'.\n\tfor (const systemObject of data.systemObjects) {\n\t\tif (systemObject.enabled) {\n\t\t\tlet numberOfObjects = utils.rollNumberObjects(systemObject, modKey)\n\t\t\t// console.log(`systemObject type=${systemObject.type}, numberOfObjects=${numberOfObjects}`)\n\t\t\tfor (let i = 0; i < numberOfObjects; i++) {\n\t\t\t\tresults['systemObjects'].push(createWorld(data, systemObject))\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The main data for a given planetary body.\n * TODO This is where a type system would come in handy. TS or Flow?\n * @param {*} systemObject starData.json system object info.\n */\nconst createWorld = (data, systemObject) => {\n\t// optional feature\n\tlet feature = systemObject.features ? utils.randomArrayItem(systemObject.features) : null\n\t\n\t// TODO What about making systemObject a child of world? More consistent with other data? Or should we flatten the others instead?\n\n\tlet world = {\n\t\t'key': systemObject.key, // used for future reference in starData.json.\n\t\t'type': systemObject.type, // e.g. icePlanet\n\t\t'feature': feature,\n\t\t'habitable': systemObject.habitable,\n\t\t'surveyable': systemObject.surveyable,\n\t\t'isColonized': false, // will be set later for one lucky planetary body. Maybe more later.\n\t\t'isSurveyed': systemObject.surveyable && (utils.randomInteger(0, 1) === 1), // 50/50 chance, will be updated later if isColonized\n\t\t'planetSizeMod': systemObject.planetSizeMod,\n\t\t'orbitalComponents': [], // moons, satellites, etc\n\t\t'colonies': [] // fleshed out later\n\t}\n\n\t// If we're creating a gas giant \"world\", then we have to generate D6+4 moons that are actually terrestrial planets!\n\tif (world.key === 'gasGiant') {\n\t\tlet numGasGiantMoons = utils.roll('d6+4') // p.340\n\t\t// console.debug(`Creating ${numGasGiantMoons} significant moons for gas giant world.`)\n\t\tlet moonData = JSON.parse(JSON.stringify(utils.findArrayItemByProperty(data.systemObjects, 'key', 'terrestrialPlanet')))\n\t\t// Tweak the data for sizing this moon\n\t\t// TODO Should this live in data?\n\t\tmoonData.type = 'Gas Giant Moon'\n\t\tmoonData.planetSizeMod = systemObject.moonSizeMod\n\t\tfor (let i = 0; i < numGasGiantMoons; i++) {\n\t\t\tlet moon = createWorld(data, moonData)\n\t\t\tmoon.isMoon = true\n\t\t\tmoon.isGasGiantMoon = true\n\t\t\tworld.orbitalComponents.push(moon)\n\t\t}\n\t}\n\t\n\treturn world\n}\n\n/**\n * E.g. LV-426.\n */\nconst getSurveyedPlanetName = (data, usedPlanetNames) => {\n\tlet planetName = null\n\tlet foundUniquePlanetName = false\n\twhile (!foundUniquePlanetName) {\n\t\tlet iccCode = utils.randomArrayItem(data.iccCodes)\n\t\tlet planetCode = utils.randomInteger(111, 999)\n\t\tplanetName = iccCode + '-' + planetCode\n\t\tif (!usedPlanetNames.includes(planetName)) {\n\t\t\tfoundUniquePlanetName = true\n\t\t\tusedPlanetNames.push(planetName) // TODO should abdicate this logic up the chain, to avoid making data changes deep down.\n\t\t}\n\t}\n\treturn planetName\n}\n\n/**\n * For now, only one world in a system will be flaggged as colonized - the \"main\" world.\n * Also set its name, cause it's special.\n * \n * Added support for gas giant moons.\n */\nconst pickColonizedWorld = (data, results, usedPlanetNames) => {\n\tlet foundWorld = false\n\twhile (!foundWorld) {\n\t\tlet world = utils.randomArrayItem(results.systemObjects)\n\t\tif (world.key === 'gasGiant') {\n\t\t\tworld.isSurveyed = true\n\t\t\t// gas giants are special, they have habitable moons!\n\t\t\tlet moonWorld = utils.randomArrayItem(world.orbitalComponents)\n\t\t\tcolonizeWorld(data, moonWorld)\n\t\t\tfoundWorld = true\n\t\t} else if (world.habitable) {\n\t\t\t// ice, terrestrial, asteroid belts, etc\n\t\t\tcolonizeWorld(data, world)\n\t\t\tfoundWorld = true\n\t\t}\n\t}\n\n}\n\nconst colonizeWorld = (data, world) => {\n\tworld.isColonized = true\n\tworld.isSurveyed = true // Can't colonize an unsurveyed planet :)\n\tworld.name = utils.randomArrayItem(data.planetaryNames)\n}\n\n/**\n * Set properties for ALL system objects. \n * @param {object} data starData.json\n * @param {object} results Generated system objects etc.\n */\nconst generateWorlds = (data, results) => {\n\tlet surveyedPlanetNames = []\n\tfor (let world of results.systemObjects) {\n\t\t// Clone the data to ensure uniqueness each time we generate world data.\n\t\tgenerateWorld(JSON.parse(JSON.stringify(data)), results, world, surveyedPlanetNames)\n\t\tif (world.key === 'gasGiant') {\n\t\t\tfor (let gasGiantMoon of world.orbitalComponents) {\n\t\t\t\tgenerateWorld(JSON.parse(JSON.stringify(data)), results, gasGiantMoon, surveyedPlanetNames)\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The logic for world creation.\n * If the world has been marked as habitable, do a little extra.\n * @param {object} data starData.json\n * @param {object} world See createSystemObjects()\n */\nconst generateWorld = (data, results, world, surveyedPlanetNames) => {\n\n\t// Every world gets a name\n\tworld.name = world.isColonized ? \n\t\tutils.randomArrayItem(data.planetaryNames) : \n\t\t(world.isSurveyed ? getSurveyedPlanetName(data, surveyedPlanetNames) : null)\n\n\tworld.planetSize = utils.random2D6ArrayItem(data.planetSizes, world.planetSizeMod)\n\t// console.debug('planetSize', world.planetSize)\n\n\t// Atmosphere and temperature are driven by the object type (key).\n\tswitch (world.key) {\n\t\tcase 'gasGiant':\n\t\t\tworld.atmosphere = data.atmospheres[data.atmospheres.length -2] // Infiltrating\n\t\t\tworld.temperature = utils.random2D6ArrayItem(data.temperatures, world.atmosphere.temperatureMod)\n\t\t\tbreak\n\t\tcase 'icePlanet':\n\t\t\tworld.atmosphere = utils.random2D6ArrayItem(data.atmospheres, world.planetSize.atmosphereMod)\n\t\t\tworld.temperature = data.temperatures[0] // Frozen\n\t\t\tbreak\n\t\tcase 'asteroidBelt':\n\t\t\tworld.atmosphere = data.atmospheres[0] // Thin\n\t\t\tworld.temperature = utils.random2D6ArrayItem(data.temperatures, world.atmosphere.temperatureMod)\n\t\t\tbreak\n\t\tcase 'terrestrialPlanet':\n\t\t\tworld.atmosphere = utils.random2D6ArrayItem(data.atmospheres, world.planetSize.atmosphereMod)\n\t\t\tworld.temperature = utils.random2D6ArrayItem(data.temperatures, world.atmosphere.temperatureMod)\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown world key=${world.key}, aborting.`)\n\t}\n\n\t// Calculate average temp after all the atmo and temp fiddling.\n\tworld.temperature.average = utils.randomInteger(world.temperature.min, world.temperature.max)\n\n\tif (world.habitable) {\n\t\t// Geosphere mods use BOTH atmosphere and temperature mods. Tricky, hey?\n\t\tconst geoMod = world.atmosphere.geosphereMod + world.temperature.geosphereMod\n\t\tworld.geosphere = utils.random2D6ArrayItem(data.geospheres, geoMod)\n\n\t\tif (world.key === 'icePlanet') {\n\t\t\tworld.terrain = utils.random2D6ArrayItem(data.terrains[world.key])\n\t\t} else {\n\t\t\t// TODO In future, would need for gas giants with planets\n\t\t\tconst terrainMod = world.geosphere[world.key] + world.temperature[world.key]\n\t\t\t// console.debug(`terrain mods for ${world.key}, geosphere ${world.geosphere[world.key]} + temperature ${world.temperature[world.key]} = ${terrainMod}`)\n\t\t\tworld.terrain = utils.randomD66ArrayItem(data.terrains[world.key], terrainMod)\n\t\t}\n\t}\n\n\t// Only populate worlds flagged as habitable.\n\tif (world.isColonized) {\n\t\n\t\t// console.log(`Habitating world ${world.name}....`)\n\n\t\tconst numColonies = getNumColonies()\n\t\tconst colonySizeMod = world.planetSize.colonySizeMod + world.atmosphere.colonySizeMod\n\n\t\tfor (let i = 0; i < numColonies; i++) {\n\n\t\t\tlet colony = {\n\t\t\t\tname: `Colony ${i+1}`\n\t\t\t}\n\n\t\t\tconst colonyAllegiance = utils.random3D6ArrayItem(data.colonyAllegiances)\n\t\t\tcolony.allegiance = colonyAllegiance[results.starLocation.colonyAllegianceKey]\n\n\t\t\t// Clone colonySize data because we modify it.\n\t\t\tcolony.colonySize = JSON.parse(JSON.stringify(utils.random2D6ArrayItem(data.colonySizes, colonySizeMod)))\n\t\t\tcolony.colonySize.populationAmount = utils.roll(colony.colonySize.population)\n\t\t\t// Missions data can be either a number (as string) or a rollString.\n\t\t\t// console.debug(`missions=${colony.colonySize.missions}`)\n\t\t\tif (colony.colonySize.missions.toLowerCase().includes('d')) {\n\t\t\t\tcolony.colonySize.missionsAmount = utils.roll(colony.colonySize.missions)\n\t\t\t} else {\n\t\t\t\tcolony.colonySize.missionsAmount = parseInt(colony.colonySize.missions)\n\t\t\t}\n\n\t\t\t// Generate unique missions\n\t\t\tcolony.missions = []\n\t\t\tconst colonyMissionMod = world.atmosphere.colonyMissionMod + colony.colonySize.colonyMissionMod\n\t\t\tlet usedMissionTypes = []\n\t\t\tfor (let i = 0; i < colony.colonySize.missionsAmount; i++) {\n\t\t\t\tlet newMission = ''\n\t\t\t\tlet foundUniqueMission = false\n\t\t\t\twhile (!foundUniqueMission) {\n\t\t\t\t\tnewMission = utils.random2D6ArrayItem(data.colonyMissions, colonyMissionMod)\n\t\t\t\t\tfoundUniqueMission = !usedMissionTypes.includes(newMission.type)\n\t\t\t\t}\n\t\t\t\tusedMissionTypes.push(newMission.type)\n\t\t\t\tcolony.missions.push(newMission)\n\t\t\t}\n\n\t\t\tif (!world.isGasGiantMoon) { \n\t\t\t\t// Generate orbital components around the planet for this colony.\n\t\t\t\t// Don't generate moons for moons :) (gas giants)\n\t\t\t\t// Clone the item from the data.\n\t\t\t\tlet orbitalComponent = JSON.parse(JSON.stringify(utils.random2D6ArrayItem(data.orbitalComponents, colony.colonySize.orbitalComponenMod)))\n\t\t\t\tif (orbitalComponent.multiRoll) {\n\t\t\t\t\tconst maxComponents = utils.roll(orbitalComponent.multiRoll)\n\t\t\t\t\tfor (let i = 0; i < maxComponents; i++) {\n\t\t\t\t\t\tlet anotherOrbitalComponent = JSON.parse(JSON.stringify(utils.random2D6ArrayItem(data.orbitalComponents, colony.colonySize.orbitalComponenMod)))\n\t\t\t\t\t\tif (anotherOrbitalComponent.multiRoll) {\n\t\t\t\t\t\t\t// Skip this one, get another.\n\t\t\t\t\t\t\ti--\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tanotherOrbitalComponent.owner = colony.name\n\t\t\t\t\t\t\tapplyQuantityToType(anotherOrbitalComponent)\n\t\t\t\t\t\t\tworld.orbitalComponents.push(anotherOrbitalComponent)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Just the 1\n\t\t\t\t\torbitalComponent.owner = colony.name\n\t\t\t\t\tapplyQuantityToType(orbitalComponent)\n\t\t\t\t\tworld.orbitalComponents.push(orbitalComponent)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Generate factions for this colony.\n\t\t\tconst factionOptions = JSON.parse(JSON.stringify(utils.randomD6ArrayItem(data.factionOptions)))\n\t\t\tif (factionOptions.quantity) {\n\t\t\t\tconst numFactions = utils.roll(factionOptions.quantity)\n\t\t\t\tfor (let i = 0; i < numFactions; i++) {\n\t\t\t\t\tfactionOptions.factions.push({\n\t\t\t\t\t\tstrength: utils.roll('d6') // Alien RPG p337\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tcolony.factions = factionOptions.factions\n\t\t\t\n\t\t\t// TODO Generate allegiance (I assume they should be unique for 2 colony setup)\n\n\t\t\tworld.colonies.push(colony)\n\t\t} \n\n\t\t// Generate scenario hook.\n\t\tworld.scenarioHook = utils.randomD66ArrayItem(data.scenarioHooks)\n\n\t} else {\n\t\t\n\t\t// Not colonised stuff\n\t\t\n\t\t// Moons\n\t\tif (world.key === 'gasGiant') {\t\n\t\t\t// TODO Gas giant moons, which are themselves terrestrial planets.\n\t\t} else {\n\t\t\tlet moonComponent = {\"type\":  \"Moons\", \"quantity\": \"d3-1\", \"isMoon\": true}\n\t\t\tapplyQuantityToType(moonComponent)\n\t\t\tworld.orbitalComponents.push(moonComponent)\n\t\t}\n\n\t}\n\n}\n\nconst applyQuantityToType = (obj) => {\n\tif (obj.quantity) {\n\t\tobj.quantityAmount = utils.roll(obj.quantity) // set the number for future reference\n\t\tobj.type =  obj.quantityAmount + ' ' + obj.type\n\t}\n}\n\n/**\n * Roll 2D6, with 10 indicating two competing colonies on the same world.\n */\nconst getNumColonies = () => utils.roll('2d6') >= 10 ? 2 : 1\n\nexport default { \n\tcreateStarSystem\n}\n","import utils from './utils.js'\r\n\r\nconst spaceIndent = '  '\r\n\r\n// For CLI based results.\r\nconst printStarSystem = (results, options = {}) => {\r\n\tlet tabs = spaceIndent\r\n\treturn `Star System:\r\n${tabs}Location: ${results.starLocation.name} (${results.starLocation.colonyAllegianceKey})\r\n${tabs}Type:     ${results.starType.type}, ${results.starType.brightness}: ${results.starType.description}\r\nPlanetary Bodies (${results.systemObjects.length}):\r\n${printSystemObjects(results.systemObjects, tabs, options)}\r\n`\r\n}\r\n\r\nconst printSystemObjects = (systemObjects, tabs, options) => {\r\n\tlet out = []\r\n\tfor (const [i, world] of systemObjects.entries()) {\r\n\t\tout.push(printWorldTitle(`#${i+1}`, world, tabs))\r\n\t\t// Workaround for gas giant moons\r\n\t\tif (world.isColonized || hasColonizedMoon(world) || (world.isSurveyed && options.showSurveyedDetails)) {\r\n\t\t\tout.push(printWorldDetails(world, options, `${tabs}${spaceIndent}`))\r\n\t\t}\r\n    }\r\n\treturn out.join('\\n')\r\n}\r\n\r\n/**\r\n * Helper for gas giant moons.\r\n */\r\nconst hasColonizedMoon = (world) => {\r\n\tif (world.key !== 'gasGiant') { return false }\r\n\tfor (let moon of world.orbitalComponents) {\r\n\t\tif (moon.isColonized) { \r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\treturn false\r\n}\r\n\r\nconst printWorldTitle = (prefix, world, tabs) => {\r\n\tlet out = [`${tabs}${(''+(prefix)).padStart(2, 0)}: `]\r\n\tout.push(world.type)\r\n\tout.push(world.name ? ' ' + `\"${world.name}\"`: ' (Unsurveyed)')\r\n\tout.push(world.feature ? ', ' + world.feature : '')\r\n\tout.push(world.isColonized ? ', ' + world.geosphere.type : '')\r\n\tout.push(printMoonSummary(world))\r\n\treturn out.join('')\r\n}\r\n\r\nconst printMoonSummary = (world) => {\r\n\tlet moonCount = 0\r\n\tfor (const orbitalComponent of world.orbitalComponents) {\r\n\t\tif (orbitalComponent.isMoon) {\r\n\t\t\t// Default 1 for gas giant moons\r\n\t\t\tmoonCount = moonCount + (orbitalComponent.quantityAmount || 1)\r\n\t\t}\r\n\t}\r\n\tif (moonCount == 0) { return '' }\r\n\tif (moonCount == 1) { return `, ${moonCount} moon` }\r\n\treturn `, ${moonCount} moons`\r\n}\r\n\r\n/**\r\n * Handle all world types: habitable, colonised.\r\n */\r\nconst printWorldDetails = (world, options, tabs) => {\r\n\tconst spaces = '     '\r\n\tlet out = []\r\n\t\r\n\t// console.debug(`printWorldDetails, world=${world.habitable}, name=${world.name}`)\r\n\r\n\tout.push(`${tabs}Planet Size:  ${utils.formatNumber(world.planetSize.sizeKm)} km, ${world.planetSize.surfaceGravity} G${world.planetSize.examples ? ' (e.g. ' + world.planetSize.examples + ')' : '' }`)\r\n\tout.push(`${tabs}Atmosphere:   ${world.atmosphere.type}`)\r\n\tout.push(`${tabs}Temperature:  ${world.temperature.type}, ${world.temperature.average}°C average (e.g. ${world.temperature.description})`)\r\n\tif (world.habitable) {\r\n\t\tout.push(`${tabs}Geosphere:    ${world.geosphere.type}, ${world.geosphere.description}`)\r\n\t\tout.push(`${tabs}Terrain:      ${world.terrain.description}`)\r\n\t}\r\n\r\n\tif (world.orbitalComponents.length > 0) {\r\n\t\tif (world.isColonized || hasColonizedMoon(world)) {\r\n\t\t\tout.push(printOrbitalComponents(world, options, tabs, spaces))\r\n\t\t}\r\n\t}\r\n\r\n\tif (world.isColonized) {\r\n\t\tout.push(`${tabs}Hook:         ${world.scenarioHook.description}`)\r\n\t\tout.push(printColonyDetails(world, tabs, spaces))\r\n\t}\r\n\r\n    return out.join(`\\n`)\r\n}\r\n\r\nconst printColonyDetails = (world, tabs) => {\r\n\tconst spaces = '   '\r\n\tlet out = []\r\n\tlet nestedTabs = tabs + spaceIndent\r\n\tfor (const [i, colony] of world.colonies.entries()) {\r\n        out.push(`${tabs}Colony #${i+1}:`)\r\n\t\tout.push(`${nestedTabs}Allegiance: ${colony.allegiance}`)\r\n\t\tout.push(`${nestedTabs}Size:       ${colony.colonySize.size}, ${utils.formatNumber(colony.colonySize.populationAmount)} pax`)\r\n\t\tout.push(printColonyMissions(colony.missions, nestedTabs, spaces))\r\n\t\tout.push(printColonyFactions(colony.factions, nestedTabs, spaces))\r\n\t}\r\n\treturn out.join('\\n')\r\n}\r\n\r\nconst printColonyMissions = (missions, tabs, spaces) => {\r\n\tlet out = []\r\n\tfor (const [i, mission] of missions.entries()) {\r\n\t\tout.push(`${mission.type}`)\r\n\t}\r\n\treturn `${tabs}Missions:${spaces}` + out.join(', ')\r\n}\r\n\r\nconst printOrbitalComponents = (world, options, tabs, spaces) => {\r\n\tlet out = []\r\n\tif (world.key === 'gasGiant') {\r\n\t\tfor (const [i, moonWorld] of world.orbitalComponents.entries()) {\r\n\t\t\t// Recursive\r\n\t\t\tout.push('\\n')\r\n\t\t\tout.push(printWorldTitle(`Moon #${i+1}`, moonWorld, tabs+spaceIndent))\r\n\t\t\tif (moonWorld.isColonized || (moonWorld.isSurveyed && options.showSurveyedDetails)) {\r\n\t\t\t\tout.push('\\n')\r\n\t\t\t\tout.push(printWorldDetails(moonWorld, options, tabs+spaceIndent+spaceIndent))\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn `${tabs}Orbitals:` + out.join('')\r\n\t} else if (world.orbitalComponents.length > 0) {\r\n\t\tfor (const orbitalComponent of world.orbitalComponents) {\r\n\t\t\tout.push(`${orbitalComponent.type}${orbitalComponent.owner ? ' (' + orbitalComponent.owner + ')' : ''}`)\r\n\t\t}\r\n\t\treturn `${tabs}Orbitals:${spaces}` + out.join(', ')\r\n\t} else {\r\n\t\treturn ''\r\n\t}\r\n}\r\n\r\nconst strengthMap = [\"weak\", \"balanced\", \"balanced\", \"competing\", \"competing\", \"dominant\"] // d6 roll\r\nconst printColonyFactions = (factions, tabs, spaces) => {\r\n\t\r\n\tlet factionOutputs = {\r\n\t\t'weak': 0,\r\n\t\t'balanced': 0,\r\n\t\t'competing': 0,\r\n\t\t'dominant': 0\r\n\t}\r\n\r\n\tfor (const faction of factions) {\r\n\t\tfactionOutputs[strengthMap[faction.strength-1]]++\r\n\t}\r\n\r\n\tlet out = []\r\n\tfor (const [strength, qty] of Object.entries(factionOutputs)) {\r\n\t\tif (qty > 0) {\r\n\t\t\tout.push(`${qty} ${strength}`)\r\n\t\t}\r\n\t}\r\n\r\n\treturn `${tabs}Factions:${spaces}` + out.join(', ')\r\n}\r\n\r\nexport default { \r\n    printStarSystem\r\n}","import utils from './utils.js'\r\n\r\nconst createCargoRunJob = (data, options = {}) => {\r\n    let results = {\r\n        jobName: 'Cargo Run',\r\n        campaignType: 'spaceTruckers',\r\n        jobType: getJobType(data),\r\n        employer: utils.randomD66ArrayItem(data.spaceTruckers.employers),\r\n        destination: utils.randomD66ArrayItem(data.spaceTruckers.destinations),\r\n        goods: utils.randomD66ArrayItem(data.spaceTruckers.goods),\r\n        complications: [],\r\n        plotTwist: utils.randomD66ArrayItem(data.plotTwists),\r\n        rewards: [],\r\n        totalMonetaryReward: 0\r\n    }\r\n    \r\n    // Calculate rewards\r\n    for (let i = 0; i < results.jobType.extraRewards; i++) {\r\n        results.rewards.push(utils.randomUniqueD66Item(data.spaceTruckers.rewards, results.rewards))\r\n    }\r\n    // Calc total reward amount\r\n    results.totalMonetaryReward = calculateTotalMonetaryReward(results)\r\n\r\n    addComplications(results, data.spaceTruckers.complications)\r\n\r\n    return results\r\n}\r\n\r\nconst createMilitaryMission = (data, options = {}) => {\r\n    let results = {\r\n        jobName: 'Military Mission',\r\n        campaignType: 'colonialMarines',\r\n        jobType: getJobType(data),\r\n        mission: utils.randomD66ArrayItem(data.colonialMarines.missions),\r\n        objective: utils.randomD66ArrayItem(data.colonialMarines.objectives),\r\n        complications: [],\r\n        plotTwist: utils.randomD66ArrayItem(data.plotTwists),\r\n        rewards: [],\r\n        totalMonetaryReward: 0\r\n    }\r\n\r\n    // Rewards\r\n    for (let i = 0; i < results.jobType.extraRewards; i++) {\r\n        results.rewards.push(utils.randomUniqueD66Item(data.colonialMarines.rewards, results.rewards))\r\n    }\r\n    // Calc total reward amount\r\n    results.totalMonetaryReward = calculateTotalMonetaryReward(results)\r\n\r\n    addComplications(results, data.colonialMarines.complications)\r\n\r\n    return results\r\n}\r\n\r\nconst createExpedition = (data, options = {}) => {\r\n    let results = {\r\n        jobName: 'Expedition',\r\n        campaignType: 'explorers',\r\n        jobType: getJobType(data),\r\n        sponsor: utils.randomD66ArrayItem(data.explorers.sponsors),\r\n        mission: utils.randomD66ArrayItem(data.explorers.missions),\r\n        targetArea: utils.randomD66ArrayItem(data.explorers.targetAreas),\r\n        complications: [],\r\n        plotTwist: utils.randomD66ArrayItem(data.plotTwists),\r\n        rewards: [],\r\n        totalMonetaryReward: 0\r\n    }\r\n\r\n    // Calculate rewards\r\n    for (let i = 0; i < results.jobType.extraRewards; i++) {\r\n        results.rewards.push(utils.randomUniqueD66Item(data.explorers.rewards, results.rewards))\r\n    }\r\n    // Calc total reward amount\r\n    results.totalMonetaryReward = calculateTotalMonetaryReward(results)\r\n\r\n    addComplications(results, data.explorers.complications)\r\n\r\n    return results\r\n}\r\n\r\nconst getJobType = (data) => {\r\n    let jobType = utils.randomD66ArrayItem(data.jobTypes)\r\n    // Process baseReward\r\n    jobType.baseRewardAmount = utils.roll(jobType.baseReward)\r\n    return jobType\r\n}\r\n\r\nconst calculateTotalMonetaryReward = (results) => {\r\n    let total = 0\r\n\r\n    switch (results.campaignType) {\r\n        case 'spaceTruckers':\r\n        case 'explorers':\r\n            total += results.jobType.baseRewardAmount\r\n            break\r\n        case 'colonialMarines':\r\n            total += 0 // No base reward by default for marines.\r\n            break\r\n        default:\r\n            throw new Error(`Unknown campaignType=${results.campaignType}`)   \r\n    }\r\n\r\n    for (const extraReward of results.rewards) {\r\n        if (extraReward.isMonetaryReward) {\r\n            // TODO This is an assumption on my part, add another roll of the base amount.\r\n            total += parseInt(utils.roll(results.jobType.baseReward), 10)\r\n        }\r\n    }\r\n\r\n    return total\r\n}\r\n\r\nconst addComplications = (results, complicationsData) => {\r\n    for (let i = 0; i < results.jobType.complications; i++) {\r\n        results.complications.push(utils.randomUniqueD66Item(complicationsData, results.complications))\r\n    }\r\n}\r\n\r\nexport default {\r\n    createCargoRunJob,\r\n    createExpedition,\r\n    createMilitaryMission\r\n}","import utils from './utils.js'\r\n\r\nconst printJob = (results, options = {}) => {\r\n    let out = []\r\n    \r\n    out.push(`Job Type:          ${results.jobType.type} ${results.jobName}`)\r\n    out.push(`Destination:       ${results.jobType.destination}`)\r\n\r\n    switch (results.campaignType) {\r\n        case 'spaceTruckers':\r\n            out.push(printCargoRun(results, options))\r\n            break\r\n        case 'colonialMarines':\r\n            out.push(printMilitaryMission(results, options))\r\n            break;\r\n        case 'explorers':\r\n            out.push(printExpedition(results, options))\r\n            break;\r\n        default:\r\n            throw new Error(`Unknown campaignType=${results.campaignType}`)\r\n    }\r\n\r\n    if (results.complications.length > 0) {\r\n        out.push(printComplications(results))\r\n    }\r\n\r\n    out.push(`Plot Twist:        ${results.plotTwist.type} (${results.plotTwist.description})`)\r\n\r\n    if (results.totalMonetaryReward > 0) {\r\n        out.push(`Monetary Reward:   ${results.totalMonetaryReward} UAD`)\r\n    }\r\n    out.push(`Extra Rewards:     ${printExtraRewards(results)}`)\r\n\r\n    return out.join('\\n')\r\n}\r\n\r\nconst printCargoRun = (results, options) => {\r\n    let out = []\r\n\r\n    out.push(`Employer:          ${results.employer.type}`)\r\n    out.push(`Destination:       ${results.destination.description}`)\r\n    out.push(`Goods:             ${results.goods.type} (${results.goods.description})`)\r\n\r\n    return out.join('\\n')\r\n}\r\n\r\nconst printMilitaryMission = (results, options) => {\r\n    let out = []\r\n\r\n    out.push(`Mission:           ${results.mission.type} (${results.mission.description})`)\r\n    out.push(`Objective:         ${results.objective.type} (${results.objective.description})`)\r\n\r\n    return out.join('\\n')\r\n}\r\n\r\nconst printExpedition = (results, options) => {\r\n    let out = []\r\n\r\n    out.push(`Sponsor:           ${results.sponsor.type}`)\r\n    out.push(`Mission:           ${results.mission.type} (${results.mission.description})`)\r\n    out.push(`Target Area:       ${results.targetArea.type} (${results.targetArea.description})`)\r\n\r\n    return out.join('\\n')\r\n}\r\n\r\nconst printExtraRewards = (results) => {\r\n    let rewardsOut = []\r\n\r\n    if (results.rewards.length > 0) {\r\n        for (const reward of results.rewards) { \r\n            if (!reward.isMonetaryReward) {\r\n                rewardsOut.push(reward.type) \r\n            }\r\n        }\r\n    }\r\n\r\n    if (rewardsOut.length === 0) {\r\n        rewardsOut.push('N/A') \r\n    }\r\n\r\n    return rewardsOut.join(', ')\r\n}\r\n\r\nconst printComplications = (results) => {\r\n    let out = []\r\n\r\n    for (const [i, complication] of results.complications.entries()) {\r\n        out.push(`Complication #${i+1}:   ${complication.type} (${complication.description})`)\r\n    }\r\n\r\n    return out.join('\\n')\r\n}\r\n\r\nexport default {\r\n    printJob\r\n}","import utils from './utils.js'\r\n\r\nconst createStarSystemEncounter = (data, tensMod = 0) => {\r\n    return {\r\n        date: new Date(),\r\n        encounter: utils.randomD66ArrayItem(data.starSystemEncounters, tensMod),\r\n        reaction: utils.random2D6ArrayItem(data.shipReactions)\r\n    }\r\n}\r\n\r\nconst createSurfaceEncounter = (data, type) => {\r\n    return {\r\n        date: new Date(),\r\n        type: type,\r\n        encounter: utils.random3D6ArrayItem(data.surfaceEncounters)\r\n    }\r\n}\r\n\r\nconst createColonyEncounter = (data, tensMod = 0) => {\r\n    return {\r\n        date: new Date(),\r\n        encounter: utils.randomD66ArrayItem(data.colonyEncounters, tensMod)\r\n    }\r\n}\r\n\r\nexport default {\r\n    createColonyEncounter,\r\n    createStarSystemEncounter,\r\n    createSurfaceEncounter\r\n}","const printStarSystemEncounter = (results, options = {}) => {\r\n    return `Star System Encounter: ${results.encounter.type}\r\nShip Reaction:         ${results.reaction.type}`\r\n}\r\n\r\nconst printSurfaceEncounter = (results, options = {}) => {\r\n    let out = [`Date:        ${results.date.toString()}`]\r\n    let type = results.encounter[results.type]\r\n    if (type) {\r\n        out.push(`Type:        ${results.encounter[results.type]}`)\r\n        if (results.encounter.description) {\r\n            out.push(`Description: ${results.encounter.description}`)\r\n        }\r\n    } else {\r\n        out.push(`Type:        (No Encounter)`)\r\n    }\r\n    return out.join('\\n')\r\n}\r\n\r\nconst printColonyEncounter = (results, options = {}) => {\r\n    return `Colony Encounter: ${results.encounter.type}`\r\n}\r\n\r\nexport default {\r\n    printColonyEncounter,\r\n    printStarSystemEncounter,\r\n    printSurfaceEncounter\r\n}","<script>\n\n\timport { onMount } from 'svelte';\n\timport { createEventDispatcher } from 'svelte'\n\timport Options from './Options.svelte'\n\n\t// import utils from '../modules/utils.js'\n\timport starSystems from '../modules/starSystems.js'\n\timport starSystemPrinter from '../modules/starSystemPrinter.js'\n\timport jobs from '../modules/jobs.js'\n\timport jobsPrinter from '../modules/jobsPrinter.js'\n\timport encounters from '../modules/encounters.js'\n\timport encountersPrinter from '../modules/encountersPrinter.js'\n\n\t// Exported params that you can set from outside.\n\texport let appData\n\texport let starData\n\texport let jobsData\n\texport let encountersData\n\texport let options // See src/data/options.json\n\texport let results // Also saved to localStorage\n\t\n\tlet output = 'Waiting on User.' // Reactive variable! Love Svelte v3 :)\n\t\n\tconst dispatch = createEventDispatcher();\n\n\tfunction handleOptions() {\n\t\toptions.showOptions = !options.showOptions\n\t\tsaveOptions()\n\t}\n\n\t// Main action - user has clicked the button.\n\tfunction handleNewStarSystem() {\n\t\tresults = {}\n\t\tresults.starSystem = starSystems.createStarSystem(starData, options)\n\t\toutput = starSystemPrinter.printStarSystem(results.starSystem, options)\n\t\tsaveData()\n\t}\n\n\tfunction handleNewCargoJob() {\n\t\tresults = {}\n\t\tresults.job = jobs.createCargoRunJob(jobsData, options)\n\t\toutput = jobsPrinter.printJob(results.job, options)\n\t\tsaveData()\n\t}\n\n\tfunction handleNewMilitaryMission () {\n\t\tresults = {}\n\t\tresults.job = jobs.createMilitaryMission(jobsData, options)\n\t\toutput = jobsPrinter.printJob(results.job, options)\n\t\tsaveData()\n\t}\n\n\tfunction handleNewExpedition () {\n\t\tresults = {}\n\t\tresults.job = jobs.createExpedition(jobsData, options)\n\t\toutput = jobsPrinter.printJob(results.job, options)\n\t\tsaveData()\n\t}\n\n\tfunction handleStarSystemEncounter(tensMod = 0) {\n\t\tresults = {}\n\t\tresults.starSystemEncounter = encounters.createStarSystemEncounter(encountersData, tensMod)\n\t\toutput = encountersPrinter.printStarSystemEncounter(results.starSystemEncounter, options)\n\t\tsaveData()\n\t}\n\n\tfunction handleSurfaceEncounter(type) {\n\t\tresults = {}\n\t\tresults.surfaceEncounter = encounters.createSurfaceEncounter(encountersData, type)\n\t\toutput = encountersPrinter.printSurfaceEncounter(results.surfaceEncounter, options)\n\t\tsaveData()\n\t}\n\n\tfunction handleColonyEncounter(tensMod) {\n\t\tresults = {}\n\t\tresults.colonyEncounter = encounters.createColonyEncounter(encountersData, tensMod)\n\t\toutput = encountersPrinter.printColonyEncounter(results.colonyEncounter, options)\n\t\tsaveData()\n\t}\n\n\tfunction saveData() {\n\t\tsaveOptions()\n\t\tdispatch('saveData', {'key': 'results', 'value': results});\n\t}\n\t\n\t// Intermediate step - re-render output, and pass the save command up and out.\n\tfunction saveOptions() {\n\t\tprintResults()\n\t\tdispatch('saveData', {'key': 'options', 'value': options});\n\t}\n\n\tfunction printResults() {\n\t\t// Existing session data.\n\t\t// TODO Keep all output separately, and add more UI to display them in tabs or similar.\n\t\tif (Object.entries(results).length > 0) { // check for empty object\n\t\t\tif (results.surfaceEncounter) {\n\t\t\t\toutput = encountersPrinter.printSurfaceEncounter(results.surfaceEncounter, options)\n\t\t\t} else if (results.starSystemEncounter) {\n\t\t\t\toutput = encountersPrinter.printStarSystemEncounter(results.starSystemEncounter, options)\n\t\t\t} else if (results.job) {\n\t\t\t\toutput = jobsPrinter.printJob(results.job, options)\n\t\t\t} else if (results.starSystem) {\n\t\t\t\toutput = starSystemPrinter.printStarSystem(results.starSystem, options)\n\t\t\t} \n\t\t}\n\t}\n\n\tonMount(async () => {\n\t\tprintResults()\n\t})\n\n</script>\n\n<main>\n\t<h2>{appData.title}</h2>\n\t\n\t<p>An <strong><i>unofficial</i></strong> web app to help Game Mothers with their prep. Click buttons and then links to generate random stuff. Results at bottom in plaintext.</p>\n\t\n\t<button on:click={e => options.showUI = 'starSystems'}>Star Systems</button>\n\t<button on:click={e => options.showUI = 'jobs'}>Jobs</button>\n\t<button on:click={e => options.showUI = 'encounters'}>Encounters</button>\n\t\n\t<div style=\"display: {options.showUI === 'starSystems' ? 'block' : 'none'}\">\n\t\t<h4>Star Systems</h4>\n\t\t&middot; <a href=\".\" on:click|preventDefault={saveOptions} on:click={handleNewStarSystem}>Star System</a>\n\t\t&middot; <a href=\".\" on:click|preventDefault={handleOptions}>(Options)</a>\n\t\t<Options starData={starData} options={options} on:saveOptions={saveOptions}/>\n\t</div>\n\t<div style=\"display: {options.showUI === 'jobs' ? 'block' : 'none'}\">\n\t\t<h4>Jobs</h4>\n\t\t&middot; <a href=\".\" on:click|preventDefault={handleNewCargoJob}>Cargo</a>\n\t\t&middot; <a href=\".\" on:click|preventDefault={handleNewMilitaryMission}>Military</a>\n\t\t&middot; <a href=\".\" on:click|preventDefault={handleNewExpedition}>Expedition</a>\n\t</div>\n\t<div style=\"display: {options.showUI === 'encounters' ? 'block' : 'none'}\">\n\t\t<h4>Star System Encounters</h4>\n\t\t&middot; <a href=\".\" on:click|preventDefault={e => handleStarSystemEncounter()}>System</a>\n\t\t&middot; <a href=\".\" on:click|preventDefault={e => handleStarSystemEncounter(-3)}>Rim</a>\n\t\t&middot; <a href=\".\" on:click|preventDefault={e => handleStarSystemEncounter(-5)}>Uncharted</a>\n\t\t<h4>Surface Encounters</h4>\n\t\t&middot; <a href=\".\" on:click|preventDefault={e => handleSurfaceEncounter('uninhabited')}>Uninhabited</a>\n\t\t&middot; <a href=\".\" on:click|preventDefault={e => handleSurfaceEncounter('colonized')}>Colonized</a>\n\t\t<h4>Colony Encounters</h4>\n\t\t&middot; <a href=\".\" on:click|preventDefault={e => handleColonyEncounter(0)}>Young</a>\n\t\t&middot; <a href=\".\" on:click|preventDefault={e => handleColonyEncounter(+1)}>Established</a>\n\t</div>\n\t\n\t<h4>Results</h4>\n\t<pre id=\"results\">{output}</pre>\n\n\t<footer>\n\t\t<small>See the <a href=\"{appData.githubUrl}\">github repo</a> for details. {appData.copyright} Last updated {appData.version}.</small>\n\t</footer>\n</main>\n\n<style>\n</style>","import App from './components/App.svelte';\n\nimport appData from './data/appData.json'\nimport starData from './data/starData.json'\nimport jobsData from './data/jobsData.json'\nimport encountersData from './data/encountersData.json'\nimport defaultOptions from './data/options.json'\n\nlet optionsString = window.sessionStorage.getItem('options')\nlet options = optionsString ? JSON.parse(optionsString) : defaultOptions\n\nlet resultsString = window.sessionStorage.getItem('results')\nlet results = resultsString ? JSON.parse(resultsString) : {}\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tappData: appData,\n\t\tstarData: starData,\n\t\tjobsData: jobsData,\n\t\tencountersData: encountersData,\n\t\toptions: options,\n\t\tresults: results\n\t}\n});\n\n// Design choice - keep the use of window.sessionStorage out of the components and instead keep here together in one place.\n// TODO Is there a more idiomatic way to do this?\n\napp.$on('saveData', event => {\n\t// console.debug(`saveData ${event.detail.key}, value:`, event.detail.value)\n\twindow.sessionStorage.setItem(event.detail.key, JSON.stringify(event.detail.value))\n})\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","slice","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","d","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","SvelteComponent","[object Object]","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","starLocation","showOptions","showSurveyedDetails","iterations","starData","dispatch","starLocations","JSON","parse","stringify","isFudge","sides","toString","toUpperCase","parseDieNotation","diceString","parts","toLowerCase","split","mod","result","count","parseInt","Number","isNaN","modifierMatch","matchResult","match","str","test","multiply","substring","isDropLowest","dropLow","isSuccessCount","highOrLow","charAt","success","rollDie","randFn","Math","random","isInteger","ceil","getTotal","results","resultCopy","total","sort","shift","v","currentResult","randomD66ArrayItem","arr","tensMod","rollD66","item","rollArrayItem","num","diceUtils","tensDie","onesDie","find","replace","floor","min","max","d66Data","existing","foundNewItem","includes","rollString","err","object","modKey","modifiers","number","rollResult","getStarType","utils","starTypes","createSystemObjects","systemObject","systemObjects","enabled","numberOfObjects","createWorld","feature","features","world","habitable","surveyable","isColonized","isSurveyed","planetSizeMod","orbitalComponents","colonies","numGasGiantMoons","moonData","moonSizeMod","moon","isMoon","isGasGiantMoon","pickColonizedWorld","usedPlanetNames","foundWorld","moonWorld","colonizeWorld","planetaryNames","generateWorlds","surveyedPlanetNames","generateWorld","gasGiantMoon","planetName","foundUniquePlanetName","iccCodes","getSurveyedPlanetName","planetSize","planetSizes","atmosphere","atmospheres","temperature","temperatures","temperatureMod","atmosphereMod","average","geoMod","geosphereMod","geosphere","geospheres","terrain","terrains","terrainMod","numColonies","getNumColonies","colonySizeMod","colony","colonyAllegiance","colonyAllegiances","allegiance","colonyAllegianceKey","colonySize","colonySizes","populationAmount","population","missions","missionsAmount","colonyMissionMod","usedMissionTypes","newMission","foundUniqueMission","colonyMissions","orbitalComponent","orbitalComponenMod","multiRoll","maxComponents","anotherOrbitalComponent","owner","applyQuantityToType","factionOptions","quantity","numFactions","factions","strength","scenarioHook","scenarioHooks","moonComponent","quantityAmount","colonyAllegianceKeys","starType","spaceIndent","printSystemObjects","tabs","out","entries","printWorldTitle","hasColonizedMoon","printWorldDetails","join","prefix","padStart","printMoonSummary","moonCount","sizeKm","surfaceGravity","examples","description","printOrbitalComponents","printColonyDetails","nestedTabs","size","printColonyMissions","printColonyFactions","spaces","mission","strengthMap","factionOutputs","weak","balanced","competing","dominant","faction","qty","brightness","getJobType","jobType","jobTypes","baseRewardAmount","baseReward","calculateTotalMonetaryReward","campaignType","extraReward","rewards","isMonetaryReward","addComplications","complicationsData","complications","jobName","employer","spaceTruckers","employers","destination","destinations","goods","plotTwist","plotTwists","totalMonetaryReward","extraRewards","sponsor","explorers","sponsors","targetArea","targetAreas","colonialMarines","objective","objectives","printCargoRun","printMilitaryMission","printExpedition","printExtraRewards","rewardsOut","reward","printComplications","complication","date","Date","encounter","colonyEncounters","starSystemEncounters","reaction","shipReactions","surfaceEncounters","title","copyright","version","showUI","githubUrl","o","outros","appData","jobsData","encountersData","output","handleStarSystemEncounter","starSystemEncounter","encounters","encountersPrinter","saveData","handleSurfaceEncounter","surfaceEncounter","handleColonyEncounter","colonyEncounter","saveOptions","printResults","job","jobsPrinter","starSystem","starSystemPrinter","starSystems","jobs","optionsString","window","sessionStorage","getItem","defaultOptions","resultsString","app","body","$on","setItem"],"mappings":"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"}