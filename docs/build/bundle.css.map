{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Options.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n\timport router from '../../node_modules/page'\n\n\timport appData from '../data/appData.json'\n\n\timport {links} from '../modules/links.js'\n\n\t// Exported params that you can set from outside.\n\texport let options // See src/data/options.json\n\texport let results // Saved externally\n\texport let isLocal\n\t\n\t// FIXME Workaround because I can't see how to configure sirv to run locally from a nested path (i.e. localhost/alienrpg).\n\tlet baseRoute = ''\n\tif (!isLocal) {\n\t\tbaseRoute = '/alienrpg'\n\t\trouter.base(baseRoute)\n\t}\n\n\tlet currentLink = links[0] // home\n\tfor (const link of links) {\n\t\trouter(link.path, () => {\n\t\t\tcurrentLink = link\n\t\t})\n\t}\n\n\t/**\n\t * Had to turn off Page.js's automatic click handling, because it would mean the actual URL attributes in the anchor elements are incorrect.\n\t * Meaning the app works fine when you were clicking it, but if you ctrl+clicked or right-click+copy-link into a new tab, the link was incorrect.\n\t */\n\tconst handleNav = (nextLink) => { \n\t\t// console.debug(`nextLink.path=${nextLink.path}`)\n\t\trouter(nextLink.path) \n\t}\n\n\trouter.start({  \n\t\tclick: false, // Required for handleNav\n\t\thashbang: true\n\t})\n\t\n</script>\n\n<main>\n\t<h2>{appData.title}</h2>\n\t\n\t<nav>\n\t\t{#each links.filter(e => e.isNav !== false) as link, i}\n\t\t\t{#if i > 0}&middot;{/if}\n\t\t\t<a on:click|preventDefault|stopPropagation={e => handleNav(link)} \n\t\t\t\thref=\"{baseRoute ? baseRoute + '/' : ''}#!{link.path}\" \n\t\t\t\tclass=\"{currentLink.path === link.path ? 'active' : ''}\">{link.title}</a>\n\t\t{/each}\n\t</nav>\n\n\t<div class=\"page\">\n\t\t<svelte:component this={currentLink.component} options={options} results={results} on:saveData/>\n\t</div>\n\t\n\t<footer>\n\t\t<small>See the <a href=\"{appData.githubUrl}\">github repo</a> for details. {appData.copyright} Last updated {appData.version}.</small>\n\t</footer>\n\n</main>\n\n<style>\n\ta {\n\t\topacity: 0.5\n\t}\n\ta.active {\n\t\topacity: 1.5;\n\t}\n</style>\n",
    "<script>\r\n    import { createEventDispatcher } from 'svelte'\r\n    \r\n    export let starData;\r\n    export let options; // See src/data/options.json\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    // Create a UI-only version of the data\r\n\tlet starLocations = JSON.parse(JSON.stringify(starData.starLocations))\r\n\tstarLocations.push({\"key\": \"ran\", \"name\": \"Random\"})\r\n\r\n    function toggleHideUninhabited() {\r\n        options.showSurveyedDetails = !options.showSurveyedDetails\r\n        dispatch('saveOptions') // no need to pass options up, it's the same object.\r\n    }\r\n    \r\n    function saveOptions() {\r\n        // console.log('Options.svelte - saveOptions')\r\n\t\tdispatch('saveOptions') // no need to pass options up, it's the same object.\r\n\t}\r\n</script>\r\n\r\n<div style=\"display: {options.showOptions === false ? 'none' : 'block'}\">\r\n    <form>\r\n        <fieldset>\r\n            <legend>Star System Options</legend>\r\n            \r\n            <div class=\"subTitle\">Output Options</div>\r\n            <div>\r\n                <label>\r\n                    <input type=\"checkbox\" on:click={toggleHideUninhabited} bind:checked={options.showSurveyedDetails}> Show surveyed details\r\n                </label>\r\n            </div>\r\n            \r\n            <div class=\"subTitle\">Star System Location</div>\r\n            <div>\r\n                {#each starLocations as item}\r\n                    <label>\r\n                        <!-- FIXME on:change fires before the value is updated to the new value, meaning it's one step behind. -->\r\n                        <input type=radio on:click={saveOptions} bind:group={options.starLocation} value={item.key}> {item.name}\r\n                    </label>\r\n                {/each}\r\n            </div>\r\n        </fieldset>\r\n    </form>\r\n</div>\r\n\r\n<style>\r\n    .subTitle {\r\n        font-weight: bold;\r\n        margin: 0.5rem 0;\r\n    }\r\n</style>"
  ],
  "names": [],
  "mappings": "AAkEC,CAAC,cAAC,CAAC,AACF,OAAO,CAAE,GAAG;CACb,CAAC,AACD,CAAC,OAAO,cAAC,CAAC,AACT,OAAO,CAAE,GAAG,AACb,CAAC;ACtBE,SAAS,eAAC,CAAC,AACP,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,MAAM,CAAC,CAAC,AACpB,CAAC"
}